;============================================================
; Info
;============================================================
; Простое логическое ветвление if-elseif-else
; Беззнаковое сравнение RCX и RAX
; RCX == RAX => RBX == 1
; RCX < RAX  => RBX == 2
; RCX > RAX  => RBX == 3
; Пример взят из книги "Ассемблер на примерах" 2006г.
;============================================================
; Vars
;============================================================
sysExitCode equ 60
;============================================================
; Data
;============================================================
section .bss
    buffer          resb 20
section .text
    global _start
;============================================================
; Code
;============================================================
_start:
    xor rbx, rbx

    cmp rax, rcx
    jz write_1
    cmp rax, rcx
    ja write_2
    mov rbx, 3
    jmp end_if
    ;...
    write_1:
    mov rbx, 1
    jmp end_if
    write_2:
    mov rbx, 2
    jmp end_if
    end_if:
    ;============================================================
    ; Exit
    ;============================================================
    mov rax, sysExitCode
    xor rdi, rdi
    syscall
